// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prateleira.Infrastruture.Data;

namespace Pratelerira.Infrastructure.Data.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CategoriaProduto", b =>
                {
                    b.Property<Guid>("Categoriasid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProdutosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Categoriasid", "ProdutosId");

                    b.HasIndex("ProdutosId");

                    b.ToTable("CategoriaProduto");
                });

            modelBuilder.Entity("Prateleira.Domain.Entity.Categoria", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("descricao");

                    b.HasKey("id");

                    b.ToTable("tb_categoria");
                });

            modelBuilder.Entity("Prateleira.Domain.Entity.Estoque", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId")
                        .IsUnique();

                    b.ToTable("tb_estoque");
                });

            modelBuilder.Entity("Prateleira.Domain.Entity.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("descricao");

                    b.HasKey("Id");

                    b.ToTable("tb_produto");
                });

            modelBuilder.Entity("CategoriaProduto", b =>
                {
                    b.HasOne("Prateleira.Domain.Entity.Categoria", null)
                        .WithMany()
                        .HasForeignKey("Categoriasid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prateleira.Domain.Entity.Produto", null)
                        .WithMany()
                        .HasForeignKey("ProdutosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Prateleira.Domain.Entity.Estoque", b =>
                {
                    b.HasOne("Prateleira.Domain.Entity.Produto", "Produto")
                        .WithOne("Estoque")
                        .HasForeignKey("Prateleira.Domain.Entity.Estoque", "ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Prateleira.Domain.Entity.Qualitativo", "InfoCompra", b1 =>
                        {
                            b1.Property<Guid>("EstoqueId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("PrecoUnidade")
                                .HasPrecision(16, 4)
                                .HasColumnType("decimal(16,4)")
                                .HasColumnName("preco_unitario");

                            b1.Property<int>("Quantidade")
                                .HasColumnType("int")
                                .HasColumnName("quantidade");

                            b1.Property<int>("UnidadeMedida")
                                .HasColumnType("int");

                            b1.HasKey("EstoqueId");

                            b1.ToTable("tb_estoque");

                            b1.WithOwner()
                                .HasForeignKey("EstoqueId");
                        });

                    b.Navigation("InfoCompra");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Prateleira.Domain.Entity.Produto", b =>
                {
                    b.Navigation("Estoque");
                });
#pragma warning restore 612, 618
        }
    }
}
